
create/load database explicitly on starting plugin?

constraints:
	start of image should be end of last image.
	image width should be ~ constant (gradient effects?)


alternative to QSqlTableModel with sqlite3?
    create application defined functions. not that useful as can't use in views,triggers,constraints...
    use more recent sqlite version? seems same.

run:
	number text unique
	uncorrected_start_chainage
	uncorrected_end_chainage
	line geometry(linestring)
	
Runs as view and table of bounderies to prevent overlap?
Or update runs where overlap?

defining offset direction:
	can get perpendicular vector from derivitive. cubic spline has continous derivitive.
	lookup 2 points short distance from chainage and make bisector.

might want to switch to using gps shapefile.
view with lines?

only need corrected centerline to find gcps.
m,corrected_x,corrected_y


image shape:
	collator treats as rectangle. causes some warping at corners.
	trapezium? 
	polygon
	

corrections:
	move centerline so that specified m,offset at x,y
	want to shift image along vehicle path ie chainage shift.	
	collator uses 1 chainage shift + offset shift/run.
	possible to get best chainage shift for group of corrections.
	for collator m correction for next run tends to be opposite sign. implies x,y shift needed
	chainages from shapefile(from geometry) higher than csv
	csv appears to have more accurate chainages.
	try chainage,offset shift per correction.

	choosing between possible new chainages for correction?
	minimize distance to neiboring corrections?
	
	


have original_m and uncorrected x,y
want to add correction to this.
original_m,0 -> corrected m,offset -> corrected x,y

	
what images are in run depends on corrections.
select run,frame_id,line,pixel,new_x,new_y,frame_id*5-line*5.0/1250 as m from corrections	

select *,start_m+(end_m-start_m)*Line_Locate_Point(line,makePoint(354473,321903,27700)) as m from lines 
where ST_Distance(line,makePoint(354473,321903,27700)) < 20
order by ST_Distance(line,makePoint(354473,321903,27700)) asc

could find chainage shift with
then find lowest residual

select *,ST_Intersection(line,buff)
from 
(select run,frame_id*5-line*5.0/1250 as m,makePoint(new_x,new_y,27700),st_buffer(makePoint(new_x,new_y,27700),20) as buff from corrections)
inner join lines on ST_Intersects(line,buff)
--want nearest point of line to point.  		
		
		
dialog for chainage shift from point?
	QComboxBox of chainage,offset within distance.
	display linestring from start to new chainage. QgsRubberBand.
	
	
runs vs no runs:
	no runs simpler
	could have 1 shift/offset per run like collator does
	better if don't need to spend time splitting into runs
		


xy shift puts corrected points in correct place. points between then not.


m shift < ~ distance from original point to new point
		
		
		
	
everything as single run would simplify calculations.
how to make nice ui for this?
show chainages from a-b. next and previous buttons